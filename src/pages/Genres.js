import React, { useState, useEffect } from 'react';
import axios from 'axios';
import Header from '../components/Header';
import Sidebar from '../components/Sidebar';
import styles from '../styles/Genres.module.css';
import AddGenre from '../addComponents/AddGenre';
import EditGenre from '../edit/EditGenre';
import DeleteGenres from '../deleteComponents/deleteGenres';

const Genres = () => {
    const [genres, setGenres] = useState([]); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∂–∞–Ω—Ä–æ–≤
    const [modalState, setModalState] = useState({ add: false, edit: false, delete: null }); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    const [selectedGenre, setSelectedGenre] = useState(null); // –î–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∂–∞–Ω—Ä–∞
    const [error, setError] = useState(null); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—à–∏–±–æ–∫
    const [successMessage, setSuccessMessage] = useState(null); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —É—Å–ø–µ—à–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π

    // –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const headers = {
        "Authorization": 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ2YWxpYV8xN18xQG1haWwucnUiLCJpYXQiOjE3MjgwMzUzMTIsImV4cCI6MTc1OTU3MTMxMn0.On5YvYbxIRyakD5LUjc-jHjh4TQI4O_eF4djs9vOvyuoyspiJjW9Ne40gOGx2vgK6qNaPA4Cs6d-_NCbLph0Zg',
    };

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∂–∞–Ω—Ä–æ–≤
    const getGenres = async () => {
        try {
            const response = await axios.get("http://api.ozinshe.com/core/V1/genres", { headers });
            setGenres(response.data); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –∂–∞–Ω—Ä–æ–≤
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∂–∞–Ω—Ä–æ–≤:", error);
            setError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∂–∞–Ω—Ä–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    };

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∂–∞–Ω—Ä—ã –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    useEffect(() => {
        getGenres();
    }, []);

    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏—è
    const handleOpenModal = (type, genre = null) => {
        if (type === 'add') {
            setModalState({ add: true, edit: false, delete: null });
        } else if (type === 'edit' && genre) {
            setSelectedGenre(genre); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∂–∞–Ω—Ä –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            setModalState({ add: false, edit: true, delete: null });
        } else if (type === 'delete' && genre) {
            setModalState({ add: false, edit: false, delete: genre }); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∂–∞–Ω—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
        }
    };

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    const handleCloseModal = (type) => {
        if (type === 'add') {
            setModalState({ add: false, edit: false, delete: null });
        } else if (type === 'edit') {
            setModalState({ add: false, edit: false, delete: null });
            setSelectedGenre(null); // –û—á–∏—Å—Ç–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∂–∞–Ω—Ä–∞
        } else if (type === 'delete') {
            setModalState({ add: false, edit: false, delete: null });
        }
    };

    // –£–¥–∞–ª–µ–Ω–∏–µ –∂–∞–Ω—Ä–∞
    const handleDeleteGenre = async (genre) => {
        try {
            await axios.delete(`http://api.ozinshe.com/core/V1/genres/${genre.id}`, { headers });
            setGenres((prev) => prev.filter((item) => item.id !== genre.id)); // –£–¥–∞–ª—è–µ–º –∂–∞–Ω—Ä –∏–∑ —Å–ø–∏—Å–∫–∞
            setSuccessMessage('–ñ–∞–Ω—Ä —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω!');
            handleCloseModal('delete');
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∂–∞–Ω—Ä–∞:", error);
            setError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∂–∞–Ω—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
        }
    };

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∂–∞–Ω—Ä–∞ –ø–æ—Å–ª–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const handleEditGenre = async (updatedGenre) => {
        try {
            const response = await axios.put(`http://api.ozinshe.com/core/V1/genres/${updatedGenre.id}`, updatedGenre, { headers });
            console.log('–ñ–∞–Ω—Ä —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω:', response.data);
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∂–∞–Ω—Ä–∞
            setGenres((prevGenres) => 
                prevGenres.map((genre) => genre.id === updatedGenre.id ? updatedGenre : genre)
            );
            setSuccessMessage('–ñ–∞–Ω—Ä —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω!');
            handleCloseModal('edit');
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∂–∞–Ω—Ä–∞:', error);
            setError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∂–∞–Ω—Ä–∞.');
        }
    };

    return (
        <div>
            <Header />
            <div className={styles.container}>
                <Sidebar />
                <div className={styles.container1}>
                    <div className={styles.top}>
                        <div className={styles.text}>–ñ–∞–Ω—Ä—ã</div>
                        <div className={styles.text1}>{genres.length}</div>
                        <button className={styles.addbutton} onClick={() => handleOpenModal('add')}>
                            <img className={styles.addicon} src="/images/add.svg" alt="add icon" />
                            <div className={styles.addtext}>–î–æ–±–∞–≤–∏—Ç—å</div>
                        </button>
                    </div>
                    <div className={styles.container2}>
                        {genres.map((genre) => (
                            <div key={genre.id} className={styles.block}>
                                <img className={styles.images} src={genre.link} alt="category img" />
                                <div className={styles.categoryTitle}>{genre.name}</div>
                                <div className={styles.categoryInfo}>
                                    <img className={styles.viewicon} src='/images/üåü Star (1).svg' alt='views icon' />
                                    <div className={styles.views}>{genre.movieCount}</div>
                                    <img
                                        className={styles.blockicone}
                                        src='/images/edit.svg'
                                        alt='edit icon'
                                        onClick={() => handleOpenModal('edit', genre)} // –ü–µ—Ä–µ–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                                    />
                                    <img
                                        className={styles.blockicone1}
                                        src='/images/delete.svg'
                                        alt='delete icon'
                                        onClick={() => handleOpenModal('delete', genre)} // –ü–µ—Ä–µ–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
                                    />
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            </div>
            {modalState.add && <AddGenre onClose={() => handleCloseModal('add')} />}
            {modalState.edit && selectedGenre && (
                <EditGenre
                    onClose={() => handleCloseModal('edit')}
                    onEdit={handleEditGenre} // –ü–µ—Ä–µ–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                    genreData={selectedGenre} // –ü–µ—Ä–µ–¥–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                />
            )}
            {modalState.delete && (
                <DeleteGenres
                    onClose={() => handleCloseModal('delete')}
                    onDelete={handleDeleteGenre}
                    genre={modalState.delete} // –ü–µ—Ä–µ–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
                />
            )}
            {error && <div className="error-message">{error}</div>}
            {successMessage && <div className="success-message">{successMessage}</div>}
        </div>
    );
};

export default Genres;
